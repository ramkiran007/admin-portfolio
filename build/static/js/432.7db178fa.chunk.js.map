{"version":3,"file":"static/js/432.7db178fa.chunk.js","mappings":"0LAGA,MA2BA,EA3BwBA,IAAuC,IAAtC,cAAEC,EAAa,OAAEC,EAAM,MAAEC,GAAOH,EACvD,MAAMI,GAAqBC,EAAAA,EAAAA,QAAO,MAuBlC,OArBAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAoB,KAExB,MAAMC,EAAYC,YAAW,KAC3BF,EAAoBG,IAAAA,cAAqB,CACvCC,UAAWP,EAAmBQ,QAC9BC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVd,cAAeA,GACf,GACD,KAEH,MAAO,KACLe,aAAaR,GACTD,GACFA,EAAkBU,SACpB,CACD,GACA,CAAChB,KAEGiB,EAAAA,EAAAA,KAAA,OAAKC,IAAKf,EAAoBgB,MAAO,CAAElB,SAAQC,UAAW,C","sources":["Constellation.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\n\nconst LottieAnimation = ({ animationData, height, width }) => {\n  const animationContainer = useRef(null);\n\n  useEffect(() => {\n    let animationInstance = null;\n    // Delay loading and playing the animation\n    const loadDelay = setTimeout(() => {\n      animationInstance = lottie.loadAnimation({\n        container: animationContainer.current, // the DOM element that will contain the animation\n        renderer: 'svg',\n        loop: true,\n        autoplay: true,\n        animationData: animationData, // the path to the animation json\n      });\n    }, 1000); // Delay in milliseconds before loading the animation\n\n    return () => {\n      clearTimeout(loadDelay); // Clear the timeout if the component unmounts\n      if (animationInstance) {\n        animationInstance.destroy(); // Destroy the animation instance to clean up resources\n      }\n    };\n  }, [animationData]); // Re-run this effect if animationData changes\n\n  return <div ref={animationContainer} style={{ height, width }} />;\n};\n\nexport default LottieAnimation;\n"],"names":["_ref","animationData","height","width","animationContainer","useRef","useEffect","animationInstance","loadDelay","setTimeout","lottie","container","current","renderer","loop","autoplay","clearTimeout","destroy","_jsx","ref","style"],"sourceRoot":""}